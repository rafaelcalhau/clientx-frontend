import { redirect } from "next/navigation"
import { withAuthorization } from "@/modules/auth/withAuthorization"
import { getServerAuthSession } from "@/modules/auth/auth.utils"
import { clientAPI } from "@/modules/api"
import { DEFAULT_LISTING_ITEMS_LENGTH } from "@/shared/constants"
import { formatListingResponse } from "@/shared/utils/formatListingResponse"
import { ClientsPage } from "./ClientsPage"

export const metadata = {
  title: "ClientX - My Clients",
  description: "Generated by create next app",
}

const getClients = async (
  page: string = '1',
  limit: string = String(DEFAULT_LISTING_ITEMS_LENGTH),
) => {
  const session = getServerAuthSession()
  if (!session) redirect('/login')

  return await clientAPI
    .get(
      `/v1/clients/?page=${page}&limit=${limit}`,
      { accessToken: session.accessToken }
    )
    .then(result => formatListingResponse(result))
    .catch(err => {
      console.error('@getClients', err)
      return { data: [], total: 0 }
    })
}

const PrivatePage = ({ searchParams: { page, limit } }: any) => withAuthorization(
  ClientsPage,
  async () => getClients(page, limit)
)
export default PrivatePage
